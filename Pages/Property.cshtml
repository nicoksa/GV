@page
@model GV.Pages.PropertyModel
@{
    ViewData["Title"] = Model.Propiedad?.Titulo ?? "Detalles";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.css" />


<link rel="stylesheet" href="css/stylePropertyDetails.css" />

<br />
<br />

<div class="site-section">
    <div class="container">
        <div class="row">


            <div class="property-header mb-5">
                <h1 class="property-title mb-2" style="font-family: 'Oswald', sans-serif; font-weight: 300; letter-spacing: 1px; font-size: 2rem;">
                    @Model.Propiedad?.Titulo
                </h1>

                <div class="property-location mb-3">
                    <span class="location-icon me-2">
                        <i class="fas fa-map-marker-alt" style="color: #666;"></i>
                    </span>
                    <span class="location-text" style="color: #666;">
                        @Model.Propiedad?.Ubicacion
                        @if (Model.IsUrban && !string.IsNullOrEmpty(Model.PropiedadUrbana?.Direccion))
                        {
                            <span> - @Model.PropiedadUrbana.Direccion</span>
                        }
                    </span>
                </div>
            </div>   
            <!-- Galería de Imágenes -->
           <div class="col-lg-8">
                <div class="property-gallery mb-5">
                    @if (Model.Propiedad?.Imagenes != null && Model.Propiedad.Imagenes.Any())
                    {
                        // Obtener la imagen principal o la primera imagen si no hay principal
                        var imagenPrincipal = Model.Propiedad.Imagenes.FirstOrDefault(i => i.EsPrincipal) ?? Model.Propiedad.Imagenes.First();
                        var otrasImagenes = Model.Propiedad.Imagenes.Where(i => i != imagenPrincipal).ToList();
                        var maxVisible = 5; // Máximo de miniaturas visibles

                     <div class="main-image mb-3" style="height: 500px; overflow: hidden;">
                        <img src="@imagenPrincipal.Url" alt="Imagen principal" class="img-fluid rounded w-100 h-100" style="object-fit: cover;">
                    </div>
            
                        <div class="thumbnail-gallery">
                            <div class="row g-2">
                                 @for (int i = 0; i < Math.Min(otrasImagenes.Count, maxVisible); i++)
                                {
                                    <div class="col-4 col-md-3 col-lg-2">
                                        <a href="@otrasImagenes[i].Url" data-fancybox="gallery" data-src="@otrasImagenes[i].Url" class="gallery-thumb">
                                            <img src="@otrasImagenes[i].Url" alt="Imagen @(i+1)" class="img-fluid rounded">
                                        </a>
                                    </div>
                                }

                                @if (otrasImagenes.Count > maxVisible)
                                {
                                    <div class="col-4 col-md-3 col-lg-2">
                                        <a href="@otrasImagenes[maxVisible].Url" 
                                           data-fancybox="gallery" 
                                           data-src="@otrasImagenes[maxVisible].Url" 
                                           class="gallery-thumb position-relative"
                                           data-index="@maxVisible">
                                            <img src="@otrasImagenes[maxVisible].Url" alt="Imagen @(maxVisible+1)" class="img-fluid rounded">
                                            <span class="image-counter" data-count="+@(otrasImagenes.Count - maxVisible)"></span>
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- Imágenes adicionales ocultas para Fancybox -->
                        <div style="display: none;">
                            @for (int i = maxVisible + 1; i < otrasImagenes.Count; i++)
                            {
                                <a href="@otrasImagenes[i].Url" 
                                   data-fancybox="gallery" 
                                   data-src="@otrasImagenes[i].Url"
                                   data-index="@i"></a>
                            }
                        </div>
                    }
                    else
                    {
                        <!-- Imágenes por defecto si no hay imágenes en la base de datos -->
                        <div class="main-image mb-3">
                            <img src="~/images/default-property.jpg" alt="Imagen principal" class="img-fluid rounded">
                        </div>
                        <div class="alert alert-info">No hay imágenes disponibles para esta propiedad</div>
                    }
                    </div>
         





             <div class="property-video mb-5">
                <h3 class="section-title mb-3" style="font-family: 'Oswald', sans-serif; font-weight: 300; letter-spacing: 1px;">VIDEO</h3>
                <hr style="border-top: 1px solid #eee; width: 100px; margin: 0 0 2rem;">
    
                @if (Model.Propiedad?.Videos != null && Model.Propiedad.Videos.Any())
                {
                    var video = Model.Propiedad.Videos.First();
        
                    <div class="ratio ratio-16x9 mb-4">
                        @if (video.Url.Contains("youtube.com") || video.Url.Contains("youtu.be"))
                        {
                            // Extraer el ID del video de YouTube
                            var youtubeId = video.Url.Split(new[] { "v=", "youtu.be/", "/embed/" }, StringSplitOptions.RemoveEmptyEntries).Last();
                            youtubeId = youtubeId.Split('?')[0].Split('&')[0];
                
                            <iframe src="https://www.youtube.com/embed/@youtubeId"
                                    title="Video de la propiedad"
                                    allowfullscreen
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                    frameborder="0"></iframe>
                        }
                        else if (video.Url.EndsWith(".mp4"))
                        {
                            <video controls class="w-100">
                                <source src="@video.Url" type="video/mp4">
                                Tu navegador no soporta el elemento de video.
                            </video>
                        }
                        else
                        {
                            <div class="alert alert-warning">Formato de video no soportado</div>
                        }
                    </div>
                }
                else
                {
                    <div class="alert alert-info">No hay video disponible para esta propiedad</div>
                }
            </div>





                <!-- Descripción -->
                <div class="property-description mb-5">
                    <h2 class="section-title mb-3" style="font-family: 'Oswald', sans-serif; font-weight: 300; letter-spacing: 1px;">DESCRIPCIÓN</h2>
                    <hr style="border-top: 1px solid #eee; width: 100px; margin: 0 0 2rem;">

                    @if (!string.IsNullOrEmpty(Model.Propiedad?.Descripcion))
                    {
                        // Dividir la descripción en párrafos basados en saltos de línea
                        var parrafos = Model.Propiedad.Descripcion.Split(new[] { "\r\n", "\n" }, StringSplitOptions.RemoveEmptyEntries);

                        <p class="lead" style="color: #666;">@parrafos.FirstOrDefault()</p>

                        @foreach (var parrafo in parrafos.Skip(1))
                        {
                            <p>@parrafo</p>
                        }
                    }
                    else
                    {
                        <!-- Descripción por defecto si no hay datos -->
                        <p class="lead" style="color: #666;">Exclusiva propiedad en zona residencial</p>
                        <p>Esta magnífica propiedad combina elegancia y funcionalidad en uno de los barrios más buscados de la ciudad.</p>
                        <p>La propiedad ofrece espacios luminosos y amplios ideales para familias que buscan comodidad y estilo de vida.</p>
                    }
                </div>




                <!-- Ubicación con Mapa -->
               <div class="property-location-map mb-5">
                    <h2 class="section-title mb-3" style="font-family: 'Oswald', sans-serif; font-weight: 300; letter-spacing: 1px;">UBICACIÓN</h2>
                    <hr style="border-top: 1px solid #eee; width: 100px; margin: 0 0 2rem;">

                    <div class="location-details mb-4">
                        <p>
                            <i class="fas fa-map-marker-alt text-danger me-2"></i>
                            @if (Model.IsUrban && !string.IsNullOrEmpty(Model.PropiedadUrbana?.Direccion))
                            {
                                @Model.PropiedadUrbana.Direccion
                            }
                            else
                            {
                                <span>Martin Fierro 3253</span>
                            }
                        </p>
                    </div>

                    <div class="ratio ratio-16x9">
                        @{
                             var direccionMapa = Model.IsUrban && !string.IsNullOrEmpty(Model.PropiedadUrbana?.Direccion) 
                            ? $"{Model.PropiedadUrbana.Direccion}, {Model.Propiedad?.Ubicacion}"  
                            : "Martin Fierro 3253, Saladillo";
                        }
                        <iframe src="https://maps.google.com/maps?q=@Uri.EscapeDataString(direccionMapa)&z=15&output=embed" 
                                frameborder="0" 
                                style="border:0" 
                                allowfullscreen>
                        </iframe>
                    </div>
                </div>
            </div>





            <!-- Sidebar con detalles y formulario -->
            <div class="col-lg-4">
                <div class="property-details p-4 bg-light rounded mb-4">
                    <!-- Precio dinámico con formato -->
                    <h3 class="mb-4" style="font-family: 'Oswald', sans-serif; font-weight: 300; color:forestgreen">
                        U$S @(Model.Propiedad?.Precio.ToString("N0") ?? "450,000")
                    </h3>

                    <!-- Detalles principales -->
                    <div class="details-section mb-4">
                        <h4 class="mb-3" style="font-family: 'Oswald', sans-serif; font-weight: 300; font-size: 1.2rem;">DETALLES</h4>
                        <ul class="list-unstyled">
                            @if (Model.IsUrban && Model.PropiedadUrbana != null)
                            {
                                // Lista de detalles urbanos con sus condiciones de visualización
                                var urbanDetails = new List<(bool ShouldShow, string Label, string Value)>
                                                        {
                                                        (true, "Tipo", Model.PropiedadUrbana.Tipo),
                                                        (Model.PropiedadUrbana.Dormitorios > 0, "Dormitorios", Model.PropiedadUrbana.Dormitorios.ToString()),
                                                        (Model.PropiedadUrbana.Banios > 0, "Baños", Model.PropiedadUrbana.Banios.ToString()),
                                                        (Model.PropiedadUrbana.Ambientes > 0, "Ambientes", Model.PropiedadUrbana.Ambientes.ToString()),
                                                        (Model.PropiedadUrbana.SuperficieTotal > 0, "Superficie total", $"{Model.PropiedadUrbana.SuperficieTotal} m²"),
                                                        (Model.PropiedadUrbana.SuperficieCubierta > 0, "Superficie cubierta", $"{Model.PropiedadUrbana.SuperficieCubierta} m²")
                                                        };

                                // Filtramos solo los detalles que deben mostrarse
                                var activeUrbanDetails = urbanDetails.Where(d => d.ShouldShow).ToList();

                                @foreach (var detail in activeUrbanDetails)
                                {
                                    <li class="mb-2"><strong>@detail.Label:</strong> @detail.Value</li>
                                }
                            }
                            else if (Model.PropiedadCampo != null)
                            {
                                // Lista de detalles de campo con sus condiciones de visualización
                                var fieldDetails = new List<(bool ShouldShow, string Label, string Value)>
                                                        {
                                                        (true, "Tipo", "Campo"),
                                                        (!string.IsNullOrEmpty(Model.PropiedadCampo.Aptitud), "Aptitud", Model.PropiedadCampo.Aptitud),
                                                        (Model.PropiedadCampo.Hectareas > 0, "Hectáreas", Model.PropiedadCampo.Hectareas.ToString())
                                                        };

                                // Filtramos solo los detalles que deben mostrarse
                                var activeFieldDetails = fieldDetails.Where(d => d.ShouldShow).ToList();

                                @foreach (var detail in activeFieldDetails)
                                {
                                    <li class="mb-2"><strong>@detail.Label:</strong> @detail.Value</li>
                                }
                            }
                        </ul>
                    </div>

                    <!-- Características -->
                    @if (Model.IsUrban && Model.PropiedadUrbana != null)
                    {
                        <div class="features-section mb-4">
                            <h4 class="mb-3" style="font-family: 'Oswald', sans-serif; font-weight: 300; font-size: 1.2rem;">CARACTERÍSTICAS</h4>
                            <div class="row">
                                @{
                                    // Lista con todas las características disponibles
                                    var features = new List<(bool Condition, string Name)>
                                                        {
                                                        (Model.PropiedadUrbana.Patio, "Patio"),
                                                        (Model.PropiedadUrbana.Pileta, "Pileta"),
                                                        (Model.PropiedadUrbana.Cochera, "Cochera"),
                                                        (Model.PropiedadUrbana.Aire_acond, "Aire acond."),
                                                        (Model.PropiedadUrbana.Seguridad, "Seguridad")
                                                        };

                                    // Filtramos solo las características que están presentes
                                    var activeFeatures = features.Where(f => f.Condition).ToList();

                                    // Dividimos en dos columnas
                                    var halfCount = (int)Math.Ceiling(activeFeatures.Count / 2.0);
                                }

                                @if (activeFeatures.Any())
                                {
                                    <div class="col-6">
                                        <ul class="list-unstyled">
                                            @for (int i = 0; i < halfCount; i++)
                                            {
                                                <li class="mb-2"><i class="fas fa-check text-success mr-2"></i> @activeFeatures[i].Name</li>
                                            }
                                        </ul>
                                    </div>
                                    <div class="col-6">
                                        <ul class="list-unstyled">
                                            @for (int i = halfCount; i < activeFeatures.Count; i++)
                                            {
                                                <li class="mb-2"><i class="fas fa-check text-success mr-2"></i> @activeFeatures[i].Name</li>
                                            }
                                        </ul>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-12">
                                        <p class="text-muted">No se especificaron características adicionales.</p>
                                    </div>
                                }
                            </div>
                        </div>
                    }          
                    
                </div>

                <!-- Formulario de Contacto -->
                <div class="contact-form p-4 bg-white rounded shadow sticky-lg-top" style="top: 90px;">
                    <h4 class="mb-4" style="font-family: 'Oswald', sans-serif; font-weight: 300;">CONTACTO</h4>
                    
                    <!-- WhatsApp destacado -->
                    <div class="whatsapp-contact mb-4 p-3 rounded text-center" style="background-color: #f0f8f0; border: 1px solid #8fc843;">
                        <i class="fab fa-whatsapp fa-2x mb-2" style="color: #25D366;"></i>
                        <h5 style="font-family: 'Oswald', sans-serif; font-weight: 300;">¿Consultas rápidas?</h5>
                        <a href="https://wa.me/542344542490" class="btn btn-success btn-block mt-2">
                            <i class="fab fa-whatsapp mr-2"></i> Enviar WhatsApp
                        </a>
                    </div>
                    
                    <!-- Formulario tradicional -->
                    <form action="https://api.web3forms.com/submit" method="POST">

                        <input type="hidden" name="access_key" value="5664b6f6-f5b0-45e2-a7e0-128cec685086">
                        <input type="hidden" name="redirect" id="web3redirect">
                        <input type="hidden" name="subject" value="Nuevo mensaje desde el formulario de contacto">
                        <input type="hidden" name="from_name" value="Sitio Web GV">

                        <div class="form-group">
                            <input type="text" name="nombre" class="form-control" placeholder="Nombre" required>
                        </div>
                        <div class="form-group">
                            <input type="email" name="email" class="form-control" placeholder="Email" required>
                        </div>
                        <div class="form-group">
                            <input type="tel" name="telefono" class="form-control" placeholder="Teléfono"
                             pattern="[0-9]{6,15}">
                        </div>
                        <div class="form-group">
                            <textarea name="mensaje" class="form-control" rows="4" placeholder="Mensaje" required></textarea>
                        </div>

                        <div class="h-captcha" data-captcha="true"></div>

                        <button type="submit" class="btn btn-success btn-block">Enviar Consulta</button>
                    </form>
           
                </div>
            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- JS de Fancybox 3 -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.5.7/jquery.fancybox.min.js"></script>

<script>
    $(document).ready(function () {
        $('[data-fancybox="gallery"]').fancybox();
    });



        document.addEventListener('DOMContentLoaded', function() {
        const gallery = document.querySelector('.thumbnail-gallery');
        const images = gallery.querySelectorAll('[data-fancybox]');
        const maxVisible = 6; // Número de imágenes a mostrar

        if (images.length > maxVisible) {
            const lastVisible = images[maxVisible - 1];
            const counter = lastVisible.querySelector('.image-counter') ||
                           document.createElement('span');

            counter.className = 'image-counter';
            counter.setAttribute('data-count', `+${images.length - maxVisible}`);
            lastVisible.classList.add('position-relative');
            lastVisible.appendChild(counter);

            // Ocultar imágenes adicionales pero mantenerlas en Fancybox
            for (let i = maxVisible; i < images.length; i++) {
                images[i].style.display = 'none';
            }
        }
    });
</script>


<script>
    // Genera URL absoluta para el redirect
    document.getElementById('web3redirect').value = window.location.origin + '@Url.Page("/Thanks")';
</script>


