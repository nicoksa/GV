// <auto-generated />
using System;
using GV.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GV.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250622232327_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GV.Models.Imagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("GV.Models.Propiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoPropiedad")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Propiedades");

                    b.HasDiscriminator<string>("TipoPropiedad").HasValue("Propiedad");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GV.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PropiedadId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PropiedadId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("GV.Models.PropiedadCampo", b =>
                {
                    b.HasBaseType("GV.Models.Propiedad");

                    b.Property<string>("Aptitud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hectareas")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Campo");
                });

            modelBuilder.Entity("GV.Models.PropiedadUrbana", b =>
                {
                    b.HasBaseType("GV.Models.Propiedad");

                    b.Property<bool>("Aire_acond")
                        .HasColumnType("bit");

                    b.Property<int>("Ambientes")
                        .HasColumnType("int");

                    b.Property<int>("Banios")
                        .HasColumnType("int");

                    b.Property<bool>("Cochera")
                        .HasColumnType("bit");

                    b.Property<int>("Dormitorios")
                        .HasColumnType("int");

                    b.Property<bool>("Jardin")
                        .HasColumnType("bit");

                    b.Property<bool>("Seguridad")
                        .HasColumnType("bit");

                    b.Property<int>("SuperficieCubierta")
                        .HasColumnType("int");

                    b.Property<int>("SuperficieTotal")
                        .HasColumnType("int");

                    b.Property<bool>("Terraza")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Urbana");
                });

            modelBuilder.Entity("GV.Models.Imagen", b =>
                {
                    b.HasOne("GV.Models.Propiedad", "Propiedad")
                        .WithMany("Imagenes")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("GV.Models.Video", b =>
                {
                    b.HasOne("GV.Models.Propiedad", "Propiedad")
                        .WithMany("Videos")
                        .HasForeignKey("PropiedadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedad");
                });

            modelBuilder.Entity("GV.Models.Propiedad", b =>
                {
                    b.Navigation("Imagenes");

                    b.Navigation("Videos");
                });
#pragma warning restore 612, 618
        }
    }
}
